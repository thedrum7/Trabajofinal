ggplot(grafico1, aes(x="", y=2, fill=1)) + #Seleccionamos las variables
geom_bar(stat="identity", width=1)+ #Agregando cap
grafico1 = as.data.frame(tabla_1)
colnames(grafico1) = c(1,2)
library(ggplot2) #llamamos a ggplot2
ggplot(grafico1, aes(x="", y=2, fill=1)) + #Seleccionamos las variables
geom_bar(stat="identity", width=1)+ #Agregando cap
grafico1 = as.data.frame(tabla_1)
colnames(grafico1) = c(1,2)
library(ggplot2) #llamamos a ggplot2
ggplot(grafico1, aes(x="", y=2, fill=1)) + #Seleccionamos las variables
geom_bar(stat="identity", width=1)+ #Agregando cap
grafico1 = as.data.frame(tabla_1)
colnames(grafico1) = c(1,2)
library(ggplot2) #llamamos a ggplot2
ggplot(grafico1, aes(x="", y=2, fill=1))
View(grafico1)
View(grafico1)
install.packages("rio")
apoyo2 = c(apoyo, NA)
install.packages("jpgrid")
library(rio)
data=import("02_C1_CAPITULOS.sav")
rm(list = ls()) # limpiar el working environment
linkADrive='https://docs.google.com/spreadsheets/d/e/2PACX-1vS2ZSNM8BIZtoufVTO4Mw3ZmTWW1rAAtsGzFg0shHTJXX-3GmtLsgU-Nqkw5RzDgrNX31GTC9L7LnEz/pub?gid=0&single=true&output=csv'
estadoLocales=read.csv(linkADrive)
head(estadoLocales)
library(DescTools)
TF_locales=DescTools::Freq(estadoLocales$buenEstado)
TF_locales
hist(estadoLocales$buenEstado)
library(ggplot2)
baseHist= ggplot(data=estadoLocales, aes(x=buenEstado))
histoLocales=baseHist + geom_histogram(bins=8)
histoLocales
data_histoLocales[,c("xmin","xmax","count")]
data_histoLocales[,c("xmin","xmax","count")]
data_histoLocales[,c("xmin","xmax","count")]
data_histoLocales[,c("xmin","xmax","count")]
data_histoLocales[,c("xmin","xmax","count")]
data_histoLocales[,c("xmin","xmax","count")]
data_histoLocales[,c("xmin","xmax","count")]
data_histoLocales[,c("xmin","xmax","count")]
histoLocales[,c("xmin","xmax","count")]
View(histoLocales)
View(histoLocales)
View(histoLocales)
View(histoLocales)
data_histoLocales[,c("xmin","xmax","count")]
baseHist_histoLocales[,c("xmin","xmax","count")]
data_histoLocales[,c("xmin","xmax","count")]
estadoLocales_histoLocales[,c("xmin","xmax","count")]
data_histoLocales=ggplot_build(histoLocales)$data[[1]]
data_histoLocales
data_histoLocales[,c("xmin","xmax","count")]
baseBox= ggplot(data=estadoLocales, aes(y=buenEstado))
boxLocales=baseBox + geom_boxplot()
boxLocales
summary(estadoLocales$buenEstado)
library(DescTools)
moreStatsLocales=DescTools::Desc(estadoLocales$buenEstado)
moreStatsLocales
data_boxLocales=ggplot_build(boxLocales)$data[[1]]
data_boxLocales
data_boxLocales$outliers
data_boxLocales[c('ymin','ymax')]
library(ggh4x)
install.packages("ggh4x")
library(ggh4x)
baseHist +
geom_histogram(aes(y =after_stat(density)),bins=8) +
stat_theodensity(colour = "red")
library(ggh4x)
baseHist +
geom_histogram(aes(y =after_stat(density)),bins=8) +
stat_theodensity(colour = "red")
library(ggpubr)
install(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggqqplot(estadoLocales$buenEstado)
library(rvest)
linkToWebIDE="https://es.numbeo.com/criminalidad/clasificaciones-por-pa%C3%ADs?title=2020"
xpathToTableIDE='//*[@id="t2"]'
ide <- read_html(linkToWebIDE)%>%html_nodes(xpath = xpathToTableIDE)%>%html_table()%>% .[[1]]
colnames(ide) = c("Puesto","Pais","ic","is")
ide$Puesto<- NULL
ide$is<- NULL
str(ide)
gsub(',',".",ide$ic)
ide$Countrycode=c('VEN', 'PNG', 'ZAF', 'AFG', 'HND', 'TTO', 'BRA', 'PER', 'SLV', 'GUY', 'NAM', 'SYR', 'JAM', 'PRI', 'AGO', 'BGD', 'NGA', 'BHS', 'LBY', 'KAZ', 'ARG', 'KEN', 'DOM', 'UGA', 'TZA', 'FJI', 'MYS', 'SOM', 'MNG', 'GTM', 'ZWE', 'CRI', 'COL', 'MEX', 'URY', 'BWA', 'MDV', 'BOL', 'ECU', 'KHM', 'DZA', 'PRY', 'IRN', 'ETH', 'GHA', 'UKR', 'MAR', 'IRQ', 'MUS', 'USA', 'PAN', 'SWE', 'EGY', 'FRA', 'BRM', 'IDN', 'IRL', 'VNM', 'CHL', 'MDA', 'NIC', 'ITA', 'PAK', 'BEL', 'GBR', 'PSE', 'LBN', 'IND', 'BIH', 'PHL', 'TUN', 'AUS', 'MNE', 'RUS', 'NZL', 'JOR', 'THA', 'GRC', 'LKA', 'CAN', 'ALB', 'TUR', 'MLT', 'MKD', 'BGR', 'SRB', 'LVA', 'NOR', 'HUN', 'DEU', 'KWT', 'NPL', 'LUX', 'LTU', 'XKX', 'ESP', 'CHI', 'AZE', 'SGP', 'CYP', 'PRT', 'ISR', 'BAR', 'SVK', 'POL', 'PRK', 'BRN', 'ROU', 'NDL', 'CUB', 'SAU', 'CZE', 'DNK', 'BLR', 'HRV', 'AUT', 'ISL', 'FIN', 'EST', 'ARM', 'CHE', 'SVN', 'OMN', 'HKG', 'JPN', 'GEO', 'ARE', 'TWN', 'QAT')
library(rio)
gedu=import("https://github.com/thedrum7/Entregable-2/raw/main/Data%20y%20rmd/gastoeduactu.xlsx")
persesco=import("https://github.com/thedrum7/Entregable-2/raw/main/Data%20y%20rmd/bmpersev.xls")
pobla= import("https://github.com/thedrum7/Entregable-2/raw/main/Data%20y%20rmd/pobactu.xls")
nada= import("https://github.com/thedrum7/Entregable-2/raw/main/Data%20y%20rmd/ningunactu.xlsx")
pobla$'Country Name'<- NULL
persesco$'Country Name'<- NULL
pobla$'Country Name'<- NULL
persesco$'Country Name'<- NULL
test1 = merge(pobla,persesco, by.x ="Country Code", by.y ="Country Code", all.x = T)
gedu$'Country Name'<- NULL
test2 = merge(test1,gedu, by.x ="Country Code", by.y ="Country Code", all.x = T)
ide$'Pais'<- NULL
test3 = merge(test2,ide, by.x ="Country Code", by.y ="Countrycode", all.x = T)
nada$'Pais'<- NULL
finaldata = merge(test3,nada, by.x ="Country Code", by.y ="Country Code", all.x = T)
datafinal <- finaldata [complete.cases (finaldata),]
datafinal
str(datafinal)
datafinal$ic <- gsub(",", ".", datafinal$ic)
datafinal$ic= as.numeric(datafinal$ic)
str(datafinal)
datafinal$region=c("Asia", "África", "Asia", "América del sur", "Asia", "Europa", "Europa", "Europa", "Europa", "América del sur", "América del sur", "Asia", "África", "América del norte", "Europa", "América del sur", "América del sur", "América central", "Asia", "Europa", "Europa", "Europa", "América central", "América del sur", "África", "Europa", "Europa", "África", "Europa", "Europa", "Asia", "Europa", "América central", "Asia", "América central", "Europa", "Europa", "Asia", "Asia", "Asia", "Europa", "Asia", "Europa", "América central", "Asia", "África", "Asia", "Asia", "Europa", "Europa", "Europa", "Europa", "América del norte", "Europa", "Asia", "África", "Asia", "Europa", "Asia", "América del sur", "América del sur", "Asia", "Europa", "Europa", "Europa", "Asia", "Asia", "América central", "Europa", "Europa", "Europa", "Europa", "Asia", "América central", "Asia", "África", "África", "América del sur", "América del norte", "América del sur", "Asia", "África", "África")
datafinal$region= as.factor(datafinal$region)
str(datafinal)
colnames(datafinal)[colnames(datafinal) == "gasto edu"] <- "gedu"
modelo1=formula(ic~perseve+poblacion)
reg1=lm(modelo1,data=datafinal)
summary(reg1)
modelo2=formula(ic~perseve+gedu+poblacion)
reg2=lm(modelo2,data=datafinal)
summary(reg2)
modelo3=formula(ic~perseve+gedu+Ninguna+poblacion)
reg3=lm(modelo3,data=datafinal)
summary(reg3)
modelo3_st=formula(scale(ic)~scale(perseve)+scale(gedu)+scale(Ninguna)+scale(poblacion))
modelo3_st=lm(modelo3_st,data=datafinal)
library(modelsummary)
modelo3_st=list('modelo (III_st)'=modelo3_st)
modelsummary(modelo3_st, title = "Regresion: modelo 3 con \ncoeficientes estandarizados",
stars = TRUE,
output = "kableExtra")
library(magrittr)
library(knitr)
tanova=anova(reg1,reg2,reg3)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
models=list('Regresion (I)'=reg1,
'Regresion (II)'=reg2,
'Regresion (III)'=reg3)
modelsummary(models, title = "Resultados de todos los modelos",
stars = TRUE,
output = "kableExtra")
models=list('Regresion (I)'=reg1,
'Regresion (II)'=reg2,
'Regresion (III)'=reg3)
modelsummary(models, title = "Resultados de todos los modelos",statistic = "conf.int",
stars = TRUE,
output = "kableExtra")
dontselect=c("Country Code","ic")
select=setdiff(names(datafinal),dontselect)
theData=datafinal[,select]
library(polycor)
corMatrix=polycor::hetcor(theData)$correlations
round(corMatrix,2)
library(ggcorrplot)
ggcorrplot(corMatrix)
library(ggplot2)
library(sjPlot)
plot_models(reg1,reg2,reg3,vline.color = "black",m.labels=c("Modelo 1","Modelo 2","Modelo 3"),dot.size = 1,line.size = 0.6)
plot(reg2, 1)
plot(reg2, 3)
plot(reg2, 2)
resSW=shapiro.test(reg2$residuals)
data.frame(list('SW'=resSW$statistic,
"p-value"=resSW$p.value))%>%
kable(caption = resSW$method)%>%kable_styling(full_width = F)
library(kableExtra)
resSW=shapiro.test(reg2$residuals)
data.frame(list('SW'=resSW$statistic,
"p-value"=resSW$p.value))%>%
kable(caption = resSW$method)%>%kable_styling(full_width = F)
library(DescTools)
# > 5 es problematico
VIF(reg2) %>%kable(col.names = "VIF",caption ="Evaluando Multicolinealidad usando VIF (Variance Inflation Factors)" )%>%kable_styling(full_width = F)
plot(reg2, 5)
checkReg2=as.data.frame(influence.measures(reg2)$is.inf)
checkReg2[checkReg2$cook.d & checkReg2$hat,c('cook.d','hat')]%>%kable(caption = "Valores Influyentes criticos")%>%kable_styling(full_width = F)
table(datafinal$region)
library(dplyr)
a = datafinal %>% group_by(region) %>% summarize(promedio = mean(ic, na.rm = T))
a$promedio = round(a$promedio, 0)
b = datafinal %>% group_by(region) %>% summarize(promedio2 = mean(perseve, na.rm = T))
b$promedio2 = round(b$promedio2, 0)
c = datafinal %>% group_by(region) %>% summarize(promedio3 = mean(gedu, na.rm = T))
b$promedio3 = round(c$promedio3, 0)
d = datafinal %>% group_by(region) %>% summarize(promedio4 = mean(Ninguna, na.rm = T))
b$promedio4 = round(d$promedio4, 0)
library(ggplot2)
ggplot(a, aes(x=region, y=promedio)) +
geom_bar(stat = "identity", lwd=2, fill= "#CCE1E2") + coord_flip()+
labs(title = "Indice de criminalidad",
x = " ",
y = "0 - 80")+
geom_text(aes(label=promedio),color="#009B9F", size=5, vjust=0.5)+ theme_bw()+
ylim(c(0,80))
library(ggplot2)
ggplot(d, aes(x=region, y=promedio4)) +
geom_bar(stat = "identity", lwd=2, fill= "#CCE1E2") + coord_flip()+
labs(title = "No ocupa, no estudia",
x = " ",
y = "0 - 50 %")+
geom_text(aes(label=paste0(round(promedio4,0),"%")),color="#009B9F", size=5, vjust=0.5)+ theme_bw()+
ylim(c(0,50))
library(ggplot2)
ggplot(b, aes(x=region, y=promedio2)) +
geom_bar(stat = "identity", fill= "#CCE1E2") + coord_flip()+
labs(title = "Perseverancia en estudios",
x = " ",
y = "0 - 100")+
geom_text(aes(label=paste0(round(promedio2,0),"%")),color="#009B9F", size=5, vjust=0.5)+ theme_bw()+
ylim(c(0,100))
library(ggplot2)
ggplot(c, aes(x=region, y=promedio3)) +
geom_bar(stat = "identity", fill= "#CCE1E2") + coord_flip()+
labs(title = "Porcentaje de gasto en educación",
x = " ",
y = "0 - 30")+
geom_text(aes(label=paste0(round(promedio3,0),"%")),color="#009B9F", size=5, vjust=0.5)+ theme_bw()+
ylim(c(0,30))
ggplot(datafinal, aes(x=ic, y=gedu, color = "#009B9F")) + geom_point() +
geom_point(size=3, shape=20) +
geom_text(label=datafinal$`Country Code`, vjust=-0.5, hjust = 1,color="black", size=3) +
labs(title = "Indice de criminalidad y el gasto en educación",
subtitle = "Correlación entre ic y gedu",
x = "Índice de criminalidad",
y = "Gasto en educación") +
scale_color_manual(values=c("#009B9F",'Red')) +
theme(legend.position = "none")+
ylim(0,30)
ggplot(datafinal, aes(x=ic, y=Ninguna, color = "#009B9F")) + geom_point() +
geom_point(size=3, shape=20) +
geom_text(label=datafinal$`Country Code`, vjust=-0.5, hjust = 1,color="black", size=3) +
labs(title = "Indice de criminalidad y grupo de niños que no estudian ni se ocupan de una actividad económica",
subtitle = "Correlación entre ic y ninguna",
x = "Índice de criminalidad",
y = "No ocupa, no estudia") +
scale_color_manual(values=c("#009B9F",'Red')) +
theme(legend.position = "none")+
ylim(0,70)
datafinal$`Country Code` <- c("AFG" = "AF", "AGO" = "AO", "ARE" = "AE", "ARG" = "AR", "ARM" = "AM", "AUT" = "AT", "BEL" = "BE", "BGR" = "BG", "BLR" = "BY", "BOL" = "BO", "BRA" = "BR", "BRN" = "BN", "BWA" = "BW", "CAN" = "CA", "CHE" = "CH", "CHL" = "CL", "COL" = "CO", "CRI" = "CR", "CYP" = "CY", "CZE" = "CZ", "DEU" = "DE", "DNK" = "DK", "DOM" = "DO", "ECU" = "EC", "EGY" = "EG", "ESP" = "ES", "EST" = "EE", "ETH" = "ET", "FIN" = "FI", "FRA" = "FR", "GEO" = "GE", "GRC" = "GR", "GTM" = "GT", "HKG" = "HK", "HND" = "HN", "HRV" = "HR", "HUN" = "HU", "IDN" = "ID", "IND" = "IN", "IRN" = "IR", "ISL" = "IS", "ISR" = "IL", "ITA" = "IT", "JAM" = "JM", "JOR" = "JO", "KEN" = "KE", "KHM" = "KH", "LKA" = "LK", "LTU" = "LT", "LUX" = "LU", "LVA" = "LV", "MDA" = "MD", "MEX" = "MX", "MLT" = "MT", "MNG" = "MN", "MUS" = "MU", "MYS" = "MY", "NOR" = "NO", "PAK" = "PK", "PAN" = "PA", "PER" = "PE", "PHL" = "PH", "POL" = "PL", "PRT" = "PT", "ROU" ="RO", "SAU" = "SA", "SGP" = "SG", "SLV" = "SV", "SRB" = "RS", "SVK" = "SK", "SVN" = "SI", "SWE" = "SE", "THA" = "TH", "TTO" = "TT", "TUR" = "TR", "TZA" = "TZ", "UGA" = "UG", "URY" = "UY", "USA" = "US", "VEN" = "VE", "VNM" = "VN", "ZAF" = "ZA", "ZWE" = "ZW")
colnames(datafinal)[1] = "ISO"
setwd("C:/Users/maca2/OneDrive/Escritorio/Estadistica data")
library(rvest)
linkToWebIDE="https://es.numbeo.com/criminalidad/clasificaciones-por-pa%C3%ADs?title=2020"
xpathToTableIDE='//*[@id="t2"]'
ide <- read_html(linkToWebIDE)%>%html_nodes(xpath = xpathToTableIDE)%>%html_table()%>% .[[1]]
colnames(ide) = c("Puesto","Pais","ic","is")
ide$Puesto<- NULL
ide$is<- NULL
str(ide)
gsub(',',".",ide$ic)
ide$Countrycode=c('VEN', 'PNG', 'ZAF', 'AFG', 'HND', 'TTO', 'BRA', 'PER', 'SLV', 'GUY', 'NAM', 'SYR', 'JAM', 'PRI', 'AGO', 'BGD', 'NGA', 'BHS', 'LBY', 'KAZ', 'ARG', 'KEN', 'DOM', 'UGA', 'TZA', 'FJI', 'MYS', 'SOM', 'MNG', 'GTM', 'ZWE', 'CRI', 'COL', 'MEX', 'URY', 'BWA', 'MDV', 'BOL', 'ECU', 'KHM', 'DZA', 'PRY', 'IRN', 'ETH', 'GHA', 'UKR', 'MAR', 'IRQ', 'MUS', 'USA', 'PAN', 'SWE', 'EGY', 'FRA', 'BRM', 'IDN', 'IRL', 'VNM', 'CHL', 'MDA', 'NIC', 'ITA', 'PAK', 'BEL', 'GBR', 'PSE', 'LBN', 'IND', 'BIH', 'PHL', 'TUN', 'AUS', 'MNE', 'RUS', 'NZL', 'JOR', 'THA', 'GRC', 'LKA', 'CAN', 'ALB', 'TUR', 'MLT', 'MKD', 'BGR', 'SRB', 'LVA', 'NOR', 'HUN', 'DEU', 'KWT', 'NPL', 'LUX', 'LTU', 'XKX', 'ESP', 'CHI', 'AZE', 'SGP', 'CYP', 'PRT', 'ISR', 'BAR', 'SVK', 'POL', 'PRK', 'BRN', 'ROU', 'NDL', 'CUB', 'SAU', 'CZE', 'DNK', 'BLR', 'HRV', 'AUT', 'ISL', 'FIN', 'EST', 'ARM', 'CHE', 'SVN', 'OMN', 'HKG', 'JPN', 'GEO', 'ARE', 'TWN', 'QAT')
library(rio)
gedu=import("https://github.com/thedrum7/Entregable-2/raw/main/Data%20y%20rmd/gastoeduactu.xlsx")
persesco=import("https://github.com/thedrum7/Entregable-2/raw/main/Data%20y%20rmd/bmpersev.xls")
pobla= import("https://github.com/thedrum7/Entregable-2/raw/main/Data%20y%20rmd/pobactu.xls")
nada= import("https://github.com/thedrum7/Entregable-2/raw/main/Data%20y%20rmd/ningunactu.xlsx")
pobla$'Country Name'<- NULL
persesco$'Country Name'<- NULL
test1 = merge(pobla,persesco, by.x ="Country Code", by.y ="Country Code", all.x = T)
gedu$'Country Name'<- NULL
test2 = merge(test1,gedu, by.x ="Country Code", by.y ="Country Code", all.x = T)
ide$'Pais'<- NULL
test3 = merge(test2,ide, by.x ="Country Code", by.y ="Countrycode", all.x = T)
nada$'Pais'<- NULL
finaldata = merge(test3,nada, by.x ="Country Code", by.y ="Country Code", all.x = T)
datafinal <- finaldata [complete.cases (finaldata),]
datafinal
str(datafinal)
datafinal$ic <- gsub(",", ".", datafinal$ic)
datafinal$ic= as.numeric(datafinal$ic)
str(datafinal)
datafinal$region=c("Asia", "África", "Asia", "América del sur", "Asia", "Europa", "Europa", "Europa", "Europa", "América del sur", "América del sur", "Asia", "África", "América del norte", "Europa", "América del sur", "América del sur", "América central", "Asia", "Europa", "Europa", "Europa", "América central", "América del sur", "África", "Europa", "Europa", "África", "Europa", "Europa", "Asia", "Europa", "América central", "Asia", "América central", "Europa", "Europa", "Asia", "Asia", "Asia", "Europa", "Asia", "Europa", "América central", "Asia", "África", "Asia", "Asia", "Europa", "Europa", "Europa", "Europa", "América del norte", "Europa", "Asia", "África", "Asia", "Europa", "Asia", "América del sur", "América del sur", "Asia", "Europa", "Europa", "Europa", "Asia", "Asia", "América central", "Europa", "Europa", "Europa", "Europa", "Asia", "América central", "Asia", "África", "África", "América del sur", "América del norte", "América del sur", "Asia", "África", "África")
datafinal$region= as.factor(datafinal$region)
str(datafinal)
colnames(datafinal)[colnames(datafinal) == "gasto edu"] <- "gedu"
modelo1=formula(ic~perseve+poblacion)
reg1=lm(modelo1,data=datafinal)
summary(reg1)
modelo2=formula(ic~perseve+gedu+poblacion)
reg2=lm(modelo2,data=datafinal)
summary(reg2)
modelo3=formula(ic~perseve+gedu+Ninguna+poblacion)
reg3=lm(modelo3,data=datafinal)
summary(reg3)
modelo3_st=formula(scale(ic)~scale(perseve)+scale(gedu)+scale(Ninguna)+scale(poblacion))
modelo3_st=lm(modelo3_st,data=datafinal)
library(modelsummary)
modelo3_st=list('modelo (III_st)'=modelo3_st)
modelsummary(modelo3_st, title = "Regresion: modelo 3 con \ncoeficientes estandarizados",
stars = TRUE,
output = "kableExtra")
library(magrittr)
library(knitr)
tanova=anova(reg1,reg2,reg3)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
models=list('Regresion (I)'=reg1,
'Regresion (II)'=reg2,
'Regresion (III)'=reg3)
modelsummary(models, title = "Resultados de todos los modelos",
stars = TRUE,
output = "kableExtra")
models=list('Regresion (I)'=reg1,
'Regresion (II)'=reg2,
'Regresion (III)'=reg3)
modelsummary(models, title = "Resultados de todos los modelos",statistic = "conf.int",
stars = TRUE,
output = "kableExtra")
dontselect=c("Country Code","ic")
select=setdiff(names(datafinal),dontselect)
theData=datafinal[,select]
library(polycor)
corMatrix=polycor::hetcor(theData)$correlations
round(corMatrix,2)
library(ggcorrplot)
ggcorrplot(corMatrix)
library(ggplot2)
library(sjPlot)
plot_models(reg1,reg2,reg3,vline.color = "black",m.labels=c("Modelo 1","Modelo 2","Modelo 3"),dot.size = 1,line.size = 0.6)
plot(reg2, 1)
plot(reg2, 3)
library(lmtest)
library(kableExtra)
# null: modelo homocedastico
resBP=bptest(reg2)
data.frame(list('BP'=resBP$statistic,
'df'=resBP$parameter,
"p-value"=resBP$p.value))%>%
kable(caption = resBP$method)%>%kable_styling(full_width = F)
plot(reg2, 2)
resSW=shapiro.test(reg2$residuals)
data.frame(list('SW'=resSW$statistic,
"p-value"=resSW$p.value))%>%
kable(caption = resSW$method)%>%kable_styling(full_width = F)
library(DescTools)
# > 5 es problematico
VIF(reg2) %>%kable(col.names = "VIF",caption ="Evaluando Multicolinealidad usando VIF (Variance Inflation Factors)" )%>%kable_styling(full_width = F)
plot(reg2, 5)
checkReg2=as.data.frame(influence.measures(reg2)$is.inf)
checkReg2[checkReg2$cook.d & checkReg2$hat,c('cook.d','hat')]%>%kable(caption = "Valores Influyentes criticos")%>%kable_styling(full_width = F)
table(datafinal$region)
library(dplyr)
a = datafinal %>% group_by(region) %>% summarize(promedio = mean(ic, na.rm = T))
a$promedio = round(a$promedio, 0)
b = datafinal %>% group_by(region) %>% summarize(promedio2 = mean(perseve, na.rm = T))
b$promedio2 = round(b$promedio2, 0)
c = datafinal %>% group_by(region) %>% summarize(promedio3 = mean(gedu, na.rm = T))
b$promedio3 = round(c$promedio3, 0)
d = datafinal %>% group_by(region) %>% summarize(promedio4 = mean(Ninguna, na.rm = T))
b$promedio4 = round(d$promedio4, 0)
library(ggplot2)
ggplot(a, aes(x=region, y=promedio)) +
geom_bar(stat = "identity", lwd=2, fill= "#CCE1E2") + coord_flip()+
labs(title = "Indice de criminalidad",
x = " ",
y = "0 - 80")+
geom_text(aes(label=promedio),color="#009B9F", size=5, vjust=0.5)+ theme_bw()+
ylim(c(0,80))
library(ggplot2)
ggplot(d, aes(x=region, y=promedio4)) +
geom_bar(stat = "identity", lwd=2, fill= "#CCE1E2") + coord_flip()+
labs(title = "No ocupa, no estudia",
x = " ",
y = "0 - 50 %")+
geom_text(aes(label=paste0(round(promedio4,0),"%")),color="#009B9F", size=5, vjust=0.5)+ theme_bw()+
ylim(c(0,50))
library(ggplot2)
ggplot(b, aes(x=region, y=promedio2)) +
geom_bar(stat = "identity", fill= "#CCE1E2") + coord_flip()+
labs(title = "Perseverancia en estudios",
x = " ",
y = "0 - 100")+
geom_text(aes(label=paste0(round(promedio2,0),"%")),color="#009B9F", size=5, vjust=0.5)+ theme_bw()+
ylim(c(0,100))
library(ggplot2)
ggplot(c, aes(x=region, y=promedio3)) +
geom_bar(stat = "identity", fill= "#CCE1E2") + coord_flip()+
labs(title = "Porcentaje de gasto en educación",
x = " ",
y = "0 - 30")+
geom_text(aes(label=paste0(round(promedio3,0),"%")),color="#009B9F", size=5, vjust=0.5)+ theme_bw()+
ylim(c(0,30))
ggplot(datafinal, aes(x=ic, y=gedu, color = "#009B9F")) + geom_point() +
geom_point(size=3, shape=20) +
geom_text(label=datafinal$`Country Code`, vjust=-0.5, hjust = 1,color="black", size=3) +
labs(title = "Indice de criminalidad y el gasto en educación",
subtitle = "Correlación entre ic y gedu",
x = "Índice de criminalidad",
y = "Gasto en educación") +
scale_color_manual(values=c("#009B9F",'Red')) +
theme(legend.position = "none")+
ylim(0,30)
ggplot(datafinal, aes(x=ic, y=Ninguna, color = "#009B9F")) + geom_point() +
geom_point(size=3, shape=20) +
geom_text(label=datafinal$`Country Code`, vjust=-0.5, hjust = 1,color="black", size=3) +
labs(title = "Indice de criminalidad y grupo de niños que no estudian ni se ocupan de una actividad económica",
subtitle = "Correlación entre ic y ninguna",
x = "Índice de criminalidad",
y = "No ocupa, no estudia") +
scale_color_manual(values=c("#009B9F",'Red')) +
theme(legend.position = "none")+
ylim(0,70)
datafinal$`Country Code` <- c("AFG" = "AF", "AGO" = "AO", "ARE" = "AE", "ARG" = "AR", "ARM" = "AM", "AUT" = "AT", "BEL" = "BE", "BGR" = "BG", "BLR" = "BY", "BOL" = "BO", "BRA" = "BR", "BRN" = "BN", "BWA" = "BW", "CAN" = "CA", "CHE" = "CH", "CHL" = "CL", "COL" = "CO", "CRI" = "CR", "CYP" = "CY", "CZE" = "CZ", "DEU" = "DE", "DNK" = "DK", "DOM" = "DO", "ECU" = "EC", "EGY" = "EG", "ESP" = "ES", "EST" = "EE", "ETH" = "ET", "FIN" = "FI", "FRA" = "FR", "GEO" = "GE", "GRC" = "GR", "GTM" = "GT", "HKG" = "HK", "HND" = "HN", "HRV" = "HR", "HUN" = "HU", "IDN" = "ID", "IND" = "IN", "IRN" = "IR", "ISL" = "IS", "ISR" = "IL", "ITA" = "IT", "JAM" = "JM", "JOR" = "JO", "KEN" = "KE", "KHM" = "KH", "LKA" = "LK", "LTU" = "LT", "LUX" = "LU", "LVA" = "LV", "MDA" = "MD", "MEX" = "MX", "MLT" = "MT", "MNG" = "MN", "MUS" = "MU", "MYS" = "MY", "NOR" = "NO", "PAK" = "PK", "PAN" = "PA", "PER" = "PE", "PHL" = "PH", "POL" = "PL", "PRT" = "PT", "ROU" ="RO", "SAU" = "SA", "SGP" = "SG", "SLV" = "SV", "SRB" = "RS", "SVK" = "SK", "SVN" = "SI", "SWE" = "SE", "THA" = "TH", "TTO" = "TT", "TUR" = "TR", "TZA" = "TZ", "UGA" = "UG", "URY" = "UY", "USA" = "US", "VEN" = "VE", "VNM" = "VN", "ZAF" = "ZA", "ZWE" = "ZW")
colnames(datafinal)[1] = "ISO"
library(rio)
library(ggplot2)
library(DT)
library(kableExtra)
library(modelsummary)
library(Rmisc)
library(forcats)
data = import("data_final.xlsx")
mapMUN=sf::read_sf("shapes/World_Countries_Generalized.shp")
mapMUN=sf::read_sf("World_Countries_Generalized.shp")
head(mapMUN)
mapMUN2=merge(mapMUN,data,by = "ISO", all.x = T)
mapaleyenda= ggplot(mapMUN2)+ geom_sf() + theme_light()
mapaley= mapaleyenda + geom_sf(data=mapMUN2,
aes(fill=`ic`),color = "gray")
mapa1= mapaley +
coord_sf() +
scale_fill_gradient(low = "#009B9F",  high = "#C75DAA",breaks=seq(from=0, to=100, by=20)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Indice de criminalidad en el mundo",
subtitle = "Escala del 0 al 100",
caption = "Fuente: NUMBEO 2018") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
mapa1
library(dplyr)
# Supongamos que tienes un dataframe llamado 'datos'
datos_ordenados <- datafinal %>%
select(region, ISO, poblacion, perseve, gedu, Ninguna, ic)
# Verificar el nuevo orden de columnas
print(datos_ordenados)
cor(datos_ordenados[,c(4:6)])
dataClus=datos_ordenados[,c(4:6)]
row.names(dataClus)=datos_ordenados$countrycode
library(cluster)
g.dist = daisy(dataClus, metric="gower")
library(factoextra)
fviz_nbclust(dataClus, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
library(kableExtra)
set.seed(123)
res.pam=pam(g.dist,3,cluster.only = F)
dataClus$pam=res.pam$cluster
head(dataClus,15)%>%kbl()%>%kable_styling()
fviz_silhouette(res.pam,print.summary = F)
data.frame(dataClus)
data.frame(res.pam$silinfo$widths)
silPAM=data.frame(res.pam$silinfo$widths)
silPAM$country=row.names(silPAM)
poorPAM=silPAM[silPAM$sil_width<0,'country']%>%sort()
poorPAM
fviz_nbclust(dataClus, hcut,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F,hc_func = "agnes")
set.seed(123)
library(factoextra)
res.agnes<- hcut(g.dist, k = 3,hc_func='agnes',hc_method = "ward.D")
dataClus$agnes=res.agnes$cluster
# ver
head(dataClus,15)%>%kbl()%>%kable_styling()
fviz_silhouette(res.agnes,print.summary = F)
silAGNES=data.frame(res.agnes$silinfo$widths)
silAGNES$country=row.names(silAGNES)
poorAGNES=silAGNES[silAGNES$sil_width<0,'country']%>%sort()
poorAGNES
fviz_nbclust(dataClus, hcut,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F,hc_func = "diana")
set.seed(123)
res.diana <- hcut(g.dist, k = 3,hc_func='diana')
dataClus$diana=res.diana$cluster
# veamos
head(dataClus,15)%>%kbl%>%kable_styling()
fviz_silhouette(res.diana,print.summary = F)
silDIANA=data.frame(res.diana$silinfo$widths)
silDIANA$country=row.names(silDIANA)
poorDIANA=silDIANA[silDIANA$sil_width<0,'country']%>%sort()
poorDIANA
mapMUN3=sf::read_sf("World_Countries_Generalized.shp")
head(mapMUN3)
dataClus2= merge(datos_ordenados,dataClus, by.x ="perseve", by.y ="perseve", all.x = T)
library(dplyr)
dataClus2 <- dataClus2 %>%
select(-gedu.y, -Ninguna.y)
mapMUN3=merge(mapMUN,dataClus2,by = "ISO", all.x = T)
# Definir el gráfico base
mapaley3 <- ggplot(mapMUN3) +
geom_sf(aes(fill = diana), color = "gray") +
scale_fill_gradient(low = "#009B9F", high = "#C75DAA", breaks = c(1, 2, 3), labels = c("Grupo 1", "Grupo 2", "Grupo 3")) +
labs(fill = "Grupos de Conglomerados",  # Etiqueta para la leyenda de colores
title = "Conglomerados",
subtitle = "separados en 3 grupos",
caption = "Fuente: Diana") +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
legend.position = "right",
plot.title = element_text(color = "black", size = 10, face = "bold"),
legend.text = element_text(size = 8)
) +
coord_sf()
# Mostrar el gráfico
mapaley3
datafinal(cuadro, filter = "top")
install.packages("DT")
library(DT)
cuadro = datafinal[,c(1,5)]
colnames(cuadro)[2] = "Indice de criminalidad"
datatable(cuadro, filter = "top")
install.packages("DT")
